@model ProductsPageViewModel

@{
    ViewData["Title"] = "Менеджер каталога";
}

@if(Model.IsSuccess == false)
{
  <h1 class="text-danger text-center mt-5">
    @Model.StatusMessage
  </h1>
}
else
{
<div class="container-1 py-5 mx-5">
    <div class="row">
        <div class="col-lg-4">
    <h1>Управление каталогом</h1>
</div>

    <partial name="_ProdPaginationPartial" model="@Model.Pagination"/>

    <div id="catalogView">
        <partial name="_ProductListPartial" model="@Model.Products"/>
    </div>

    <partial name="_ProdPaginationPartial" model="@Model.Pagination"/>

    </div>
</div>
}

@section Scripts
{
  <script>
    function deleteItem(itemId)
    {

      let confirmDelete = confirm("Вы уверены, что хотите удалить книгу № " + itemId + "?");
      if (confirmDelete == true)
      {
        $.ajax(
        {
          url: "Products/BookDelete?itemId="+itemId,
          type: "delete",
          data:
          {
            itemId: itemId,
          },
          success: function (data, textStatus, jqXHR)
          {
            console.log(textStatus + ": " + jqXHR.status);
            alert("Книга № " + data.itemId + " удалена.")
            $("#item-"+itemId).empty();
          }
        });
      }
    }


    function prevPage(page)
    {
      let pageNum = --page;
      if(pageNum == 0)
      {
        console.log("Page is 0, stop # " + pageNum);
      }
      else
      {
        console.log("Switching to prev page # " + pageNum);
        loadPage(pageNum);
      }
    }

    function nextPage(page, maxPage)
    {
      let pageNum = ++page;
      if(pageNum > maxPage)
      {
        console.log("Page is at max, stop # " + pageNum);
      }
      else
      {
        console.log("Switching to next page # " + pageNum);
        loadPage(pageNum);
      }
    }

    function loadPage(page)
    {
      var pageS = `${page}`;
      loadPaginationData();
      $.ajax(
        {
          @* url: "Products/GetProductsPage?page=" + page, *@
          url:"@Url.Action("GetProductsPage","Products","pageS")",
          type: "get",
          success: function (data, textStatus, jqXHR)
          {
            console.log(textStatus + ": " + jqXHR.status);
            @* console.log(data); *@
            $("#catalogView").html(data);
          }
        });
    }

    function loadPaginationData()
    {
      let page = 1;
      $.ajax(
        {
          @* url: "Products/GetCountData?tmp="+page, *@
          @* url:"@Url.Action("GetCountData","Products")", *@
          url:"Info/GetCountData",
          type: "get",

          success: function (data, textStatus, jqXHR)
          {
            console.log(textStatus + ": " + jqXHR.status);
            console.log("Total books: "+ data.count);
            console.log("Page size: "+ data.pageSize);
            console.log("Total pages: "+ data.count/data.pageSize);
          }
        });
    }
  </script>
}